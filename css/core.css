/*
 | Light Design
 | https://light-design.github.io
 |
 | Copyright (c) 2017 Noor Wachid
 | Licensed under the MIT license
 */
*,
*:after,
*:before {
    box-sizing: inherit;
}
:root {
    /* COLOR */
    --ini: lavender;
    --pri: springgreen;
    --sec: pink;
    --ter: purple;
}
html {
    box-sizing: border-box;
    font-size: 62.5%;
}
body {
    color: darkslategray;
    font-family: 'Josefin Sans', 'Roboto', 'Helvetica', 'Arial', sans-serif;
    font-size: 1.6em;
    font-weight: 300;
    letter-spacing: .01em;
    line-height: 1.6;
}
blockquote {
    border-left: 0.5rem solid var(--sec);
    margin-left: 0;
    margin-right: 0;
    padding: 0.5rem 1.5rem;
}
q {
  quotes: "“" "”" "‘" "’";
}
.button,
button,
input[type='button'],
input[type='reset'],
input[type='submit'] {
    background-color: var(--pri);
    border: 0.1rem solid var(--pri);
    border-radius: .4rem;
    color: white;
    cursor: pointer;
    display: inline-block;
    font-size: 1.1rem;
    font-weight: 700;
    height: 3.8rem;
    letter-spacing: .1rem;
    line-height: 3.8rem;
    padding: 0 1.5rem;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;
    white-space: nowrap;
}
.button:focus,
.button:hover,
button:focus,
button:hover,
input[type='button']:focus,
input[type='button']:hover,
input[type='reset']:focus,
input[type='reset']:hover,
input[type='submit']:focus,
input[type='submit']:hover {
    background-color: var(--ter);
    border-color: var(--ter);
    color: white;
    outline: 0;
}
.button[disabled],
button[disabled],
input[type='button'][disabled],
input[type='reset'][disabled],
input[type='submit'][disabled] {
    cursor: default;
    opacity: .5;
}
.button[disabled]:focus,
.button[disabled]:hover,
button[disabled]:focus,
button[disabled]:hover,
input[type='button'][disabled]:focus,
input[type='button'][disabled]:hover,
input[type='reset'][disabled]:focus,
input[type='reset'][disabled]:hover,
input[type='submit'][disabled]:focus,
input[type='submit'][disabled]:hover {
    background-color: var(--pri);
    border-color: var(--pri);
}
.button.outline,
button.outline,
input[type='button'].outline,
input[type='reset'].outline,
input[type='submit'].outline {
    background-color: transparent;
    color: var(--pri);
}
.button.outline:focus,
.button.outline:hover,
button.outline:focus,
button.outline:hover,
input[type='button'].outline:focus,
input[type='button'].outline:hover,
input[type='reset'].outline:focus,
input[type='reset'].outline:hover,
input[type='submit'].outline:focus,
input[type='submit'].outline:hover {
    background-color: transparent;
    border-color: var(--ter);
    color: var(--ter);
}
.button.outline[disabled]:focus,
.button.outline[disabled]:hover,
button.outline[disabled]:focus,
button.outline[disabled]:hover,
input[type='button'].outline[disabled]:focus,
input[type='button'].outline[disabled]:hover,
input[type='reset'].outline[disabled]:focus,
input[type='reset'].outline[disabled]:hover,
input[type='submit'].outline[disabled]:focus,
input[type='submit'].outline[disabled]:hover {
    border-color: inherit;
    color: var(--pri);
}
.button.clear,
button.clear,
input[type='button'].clear,
input[type='reset'].clear,
input[type='submit'].clear {
    background-color: transparent;
    border-color: transparent;
    color: var(--pri);
}
.button.clear:focus,
.button.clear:hover,
button.clear:focus,
button.clear:hover,
input[type='button'].clear:focus,
input[type='button'].clear:hover,
input[type='reset'].clear:focus,
input[type='reset'].clear:hover,
input[type='submit'].clear:focus,
input[type='submit'].clear:hover {
    background-color: transparent;
    border-color: transparent;
    color: var(--ter);
}
.button.clear[disabled]:focus,
.button.clear[disabled]:hover,
button.clear[disabled]:focus,
button.clear[disabled]:hover,
input[type='button'].clear[disabled]:focus,
input[type='button'].clear[disabled]:hover,
input[type='reset'].clear[disabled]:focus,
input[type='reset'].clear[disabled]:hover,
input[type='submit'].clear[disabled]:focus,
input[type='submit'].clear[disabled]:hover {
    color: var(--pri);
}
input[type='email'],
input[type='number'],
input[type='password'],
input[type='search'],
input[type='tel'],
input[type='text'],
input[type='url'],
textarea,
select {
    background-color: transparent;
    border: 0.1rem solid var(--pri);
    border-radius: .4rem;
    box-shadow: none;
    box-sizing: inherit;
    height: 3.8rem;
    padding: .6rem 1.0rem;
    width: 100%;
}
input[type='email']:focus,
input[type='number']:focus,
input[type='password']:focus,
input[type='search']:focus,
input[type='tel']:focus,
input[type='text']:focus,
input[type='url']:focus,
textarea:focus,
select:focus {
    border-color: var(--ter);
    outline: 0;
}
select {
    padding-right: 3.0rem;
}
textarea {
    min-height: 6.5rem;
}
label,
legend {
    display: block;
    font-size: 1.6rem;
    margin-bottom: .5rem;
}
fieldset {
    border-width: 0;
    padding: 0;
}
input[type='checkbox'],
input[type='radio'] {
    display: inline;
}
input + label {
    display: inline-block;
    margin-left: .5rem;
}
.container {
    margin: 0 auto;
    max-width: 112.0rem;
    padding: 0 2.0rem;
    position: relative;
    width: 100%;
}
code {
    background: var(--ini);
    border-radius: .4rem;
    margin: 0 .2rem;
    padding: .2rem .5rem;
    white-space: nowrap;
}
pre {
    background: var(--ini);
    border-left: 0.5rem solid var(--pri);
    overflow-y: hidden;
}
pre > code {
    border-radius: 0;
    display: block;
    padding: 1rem 1.5rem;
    white-space: pre;
}
hr {
    border: 0;
    border-top: 0.1rem solid var(--ini);
    margin: 3.0rem 0;
}
.row,
.row-fixed {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    width: 100%;
}
[class*='row'].wrap {
    flex-wrap: wrap;
}
[class*='row'] .column {
    flex: 1 1 auto;
    margin-left: 0;
    max-width: 100%;
}
[class*='row'] .column-12 {
    flex: 0 0 100%;
}
[class*='row'] .column-11 {
    flex: 0 0 calc(100% / 12 * 11);
}
[class*='row'] .column-10 {
    flex: 0 0 calc(100% / 12 * 10);
}
[class*='row'] .column-9 {
    flex: 0 0 calc(100% / 12 * 9);
}
[class*='row'] .column-8 {
    flex: 0 0 calc(100% / 12 * 8);
}
[class*='row'] .column-7 {
    flex: 0 0 calc(100% / 12 * 7);
}
[class*='row'] .column-6 {
    flex: 0 0 calc(100% / 2);
}
[class*='row'] .column-5 {
    flex: 0 0 calc(100% / 12 * 5);
}
[class*='row'] .column-4 {
    flex: 0 0 calc(100% / 3);
}
[class*='row'] .column-3 {
    flex: 0 0 calc(100% / 4);
}
[class*='row'] .column-2 {
    flex: 0 0 calc(100% / 6);
}
[class*='row'] .column-1 {
    flex: 0 0 calc(100% / 12);
}
@media (max-width: 480px) {
    .row {
        flex-direction: column;
        flex-wrap: wrap;
    }
    .row [class*='column'] {
        flex: 1 1 auto;
    }
}
a {
    color: var(--pri);
    text-decoration: none;
}
a:focus,
a:hover {
    color: var(--ter);
}
dl,
ol,
ul {
    list-style: none;
    margin-top: 0;
    padding-left: 0;
}
dl dl,
dl ol,
dl ul,
ol dl,
ol ol,
ol ul,
ul dl,
ul ol,
ul ul {
    font-size: 90%;
    margin: 1.5rem 0 1.5rem 3.0rem;
}
ol {
    list-style: decimal inside;
}
ul {
    list-style: circle inside;
}
table {
    border-collapse: collapse;
    border-spacing: 0;
    width: 100%;
}
table.scroll {
    overflow: auto;
}
th,
td {
    border: 1px solid var(--sec);
    padding: .5rem;
}
th {
    color: var(--pri)
}